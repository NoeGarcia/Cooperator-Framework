<%foreach (BaseTreeNode entityNode in Model.Children) {
    EntityNode currentEntity = (EntityNode)entityNode;
    if (currentEntity.GenerateObject && (currentEntity.PrimaryKeyFields.Count != 0 || currentEntity.GenerateAsReadOnly)) {%>
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version <%Response.Write(parameters["GeneratorVersion"]);%>
' Created: <%Response.Write(DateTime.Today.ToShortDateString());%> - <%Response.Write(DateTime.Now.ToShortTimeString());%>
' This is a partial class file. The other one is <%Response.Write(currentEntity.GenerateAs);%>Object.Auto.vb
' You can edit this file as your wish.
'------------------------------------------------------------------------------

Imports System
Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.Exceptions

Namespace Objects<%Response.Write(currentEntity.FormattedNamespace);%>
    ''' <summary>
    ''' This class represents a Object of <%Response.Write(currentEntity.Name);%> table.
    ''' </summary>
    <Serializable()> _
    Public Partial Class <%Response.Write(currentEntity.GenerateAs);%>Object        
        ' Implements IValidable

        ''' <summary>
        ''' Called from class constructor.
        ''' </summary>
        Protected Overrides Sub Initialize()
        End Sub

        ' ''' <summary>
        ' ''' Called after class constructor.
        ' ''' </summary>
        ' Protected Overrides Sub Initialized()
        ' 'Warnging: This method is only called by parameterized contructors.
        ' End Sub

        ' ''' <summary>
        ' ''' When IValidable is implemented, this method is invoked by Gateway before Insert or Update to validate Object.
        ' ''' </summary>
        ' Public Sub Validate() Implements IValidable.Validate
        '     Dim msgRequired As String = "{0} can not be null"
        '     Dim msgOutOfRange As String = "{0} incorrect value"

        <%foreach (PropertyNode currentProperty in currentEntity.Children) {
            if (!currentProperty.IsNullable && !currentProperty.GenerateAsReadOnly && currentProperty.GenerateProperty) {
                switch (currentProperty.CLRType) {
                    case "System.String" :
                        Response.Write(String.Format("'     If (String.IsNullOrEmpty(Me.{0})) Then Throw New RuleValidationException(String.Format(msgRequired, \"{0}\"))\r\n        ", currentProperty.GenerateAs));
                        break;
                    case "System.Int32" :
                        Response.Write(String.Format("'     If (Me.{0} <= 0) Then Throw New RuleValidationException(String.Format(msgOutOfRange, \"{0}\"))\r\n        ", currentProperty.GenerateAs));
                        break; 
                }
            }
        }%>
        ' End Sub       
    End Class

    ''' <summary>
    ''' This class represents a record set of <%Response.Write(currentEntity.Name);%> table.
    ''' </summary>
    Public Partial Class <%Response.Write(currentEntity.GenerateAs);%>ObjectList
         ' ''' <summary>
         ' ''' Returns a typed Dataset based on its content.
         ' ''' </summary>
         'Public Overrides Function ToDataSet() As System.Data.DataSet
         '    Dim MyDataSet As YOUR_TYPED_DATASET = New YOUR_TYPED_DATASET()
         '    Dim Exporter As ObjectListHelper(Of <%Response.Write(currentEntity.GenerateAs);%>Object, <%Response.Write(currentEntity.GenerateAs);%>ObjectList) = New ObjectListHelper(Of <%Response.Write(currentEntity.GenerateAs);%>Object, <%Response.Write(currentEntity.GenerateAs);%>ObjectList)()
         '    Exporter.FillDataSet(MyDataSet, Me)
         '    Return MyDataSet
         'End Function
    End Class

End NameSpace

Namespace Views<%Response.Write(currentEntity.FormattedNamespace);%>
    ''' <summary>
    ''' This class represents a view of an collection of <%Response.Write(currentEntity.Name);%>Objects.
    ''' </summary>
    Partial Public Class <%Response.Write(currentEntity.GenerateAs);%>ObjectListView
    End Class
End NameSpace


<%
Response.SaveBuffer("\\Objects\\" + currentEntity.FullGenerateAs + "Object.vb");
}
}
%>
