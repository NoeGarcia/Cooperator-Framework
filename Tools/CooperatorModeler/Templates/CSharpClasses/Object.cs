<%foreach (BaseTreeNode entityNode in Model.Children) {
    EntityNode currentEntity = (EntityNode)entityNode;
    if (currentEntity.GenerateObject && (currentEntity.PrimaryKeyFields.Count != 0 || currentEntity.GenerateAsReadOnly)) {%>
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version <%Response.Write(parameters["GeneratorVersion"]);%>
// Created: <%Response.Write(DateTime.Today.ToShortDateString());%> - <%Response.Write(DateTime.Now.ToShortTimeString());%>
// This is a partial class file. The other one is <%Response.Write(currentEntity.GenerateAs);%>Object.Auto.cs
// You can edit this file as your wish.
//------------------------------------------------------------------------------

using System;
using Cooperator.Framework.Core;
using Cooperator.Framework.Core.Exceptions;

namespace <%Response.Write(parameters["RulesProjectName"]);%>.Objects<%Response.Write(currentEntity.FormattedNamespace);%>
{
    /// <summary>
    /// This class represents a Object of <%Response.Write(currentEntity.Name);%> table.
    /// </summary>
    [Serializable]
    public partial class <%Response.Write(currentEntity.GenerateAs);%>Object
        // : IValidable
    {

        /// <summary>
        /// Called from class constructor.
        /// </summary>
        protected override void Initialize()
        {
        }

        // /// <summary>
        // /// Called after parameterized constructor. 
        // /// </summary>
        // protected override void Initialized()
        // {       
        // //Warnging: This method is only called by parameterized contructors.
        // }

        // /// <summary>
        // /// When IValidable is implemented, this method is invoked by Gateway before Insert or Update to validate Object.
        // /// </summary>
        // public void Validate()
        // {
        //     string msgRequired = "{0} can't be null";
        //     string msgOutOfRange = "{0} incorrect value";

        <%foreach (PropertyNode currentProperty in currentEntity.Children) {
            if (!currentProperty.IsNullable && !currentProperty.GenerateAsReadOnly && currentProperty.GenerateProperty) {
                switch (currentProperty.CLRType) {
                    case "System.String" :
                        Response.Write(String.Format("//     if (string.IsNullOrEmpty(this.{0})) throw new RuleValidationException(string.Format(msgRequired, \"{0}\"));\r\n        ", currentProperty.GenerateAs));
                        break;
                    case "System.Int32" :
                        Response.Write(String.Format("//     if (this.{0} <= 0) throw new RuleValidationException(string.Format(msgOutOfRange, \"{0}\"));\r\n        ", currentProperty.GenerateAs));
                        break; 
                }
            }
        }%>
        // }
    }

    /// <summary>
    /// This class represents a record set of <%Response.Write(currentEntity.Name);%> table.
    /// </summary>
    public partial class <%Response.Write(currentEntity.GenerateAs);%>ObjectList
    {
         // /// <summary>
         // /// Returns a typed Dataset based on its content.
         // /// </summary>
         // public override System.Data.DataSet ToDataSet()
         // {
         //    YOUR_TYPED_DATASET MyDataSet = new YOUR_TYPED_DATASET();
         //    ObjectListHelper<<%Response.Write(currentEntity.GenerateAs);%>Object, <%Response.Write(currentEntity.GenerateAs);%>ObjectList> Exporter = new ObjectListHelper<<%Response.Write(currentEntity.GenerateAs);%>Object, <%Response.Write(currentEntity.GenerateAs);%>ObjectList>();
         //    Exporter.FillDataSet(MyDataSet, this);
         //    return MyDataSet;
         // }
    }
}

namespace <%Response.Write(parameters["RulesProjectName"]);%>.Views<%Response.Write(currentEntity.FormattedNamespace);%>
{
    /// <summary>
    /// This class represents a view of an collection of <%Response.Write(currentEntity.Name);%>Objects.
    /// </summary>
    public partial class <%Response.Write(currentEntity.GenerateAs);%>ObjectListView
    {
    }
}

<%
Response.SaveBuffer("\\Objects\\" + currentEntity.FullGenerateAs + "Object.cs");
}
}
%>
